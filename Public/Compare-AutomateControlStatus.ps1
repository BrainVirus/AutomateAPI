function Compare-AutomateControlStatus {
<#
.Synopsis
   Takes computer objects from Get-AutomateComputer, compares against online sessions in control and outputs an object of agents that are on in Control and Off in Automate
.DESCRIPTION
   Takes computer objects from Get-AutomateComputer, compares against online sessions in control and outputs an object of agents that are on in Control and Off in Automate
.PARAMETER ComputerObject
   ComputerObject generated by Get-AutomateComputer
.EXAMPLE
   Get-AutomateComputer -Online $False | Compare-AutomateControlStatus
.INPUTS
   Computer Object as derived from Get-AutomateComputer
.OUTPUTS
   Custom object containing online status for machines online in Control and Offline in Automate
#>
    [CmdletBinding()]
    param (
        [Parameter(ValueFromPipeline = $true)]
        $ComputerObject

    )
  
    begin {
        $Source = @"
 
using System;
using System.Management.Automation;
namespace FastSearch
{
 
    public static class Search
    {
        public static object Find(PSObject[] collection, string column, string data)
        {
            foreach(PSObject item in collection)
            {
                if (item.Properties[column].Value.ToString() == data) { return item; }
            }
 
            return null;
        }
    }
}
"@
        Add-Type -ReferencedAssemblies $Assem -TypeDefinition $Source -Language CSharp        
        $ArrayTest = @()
        $ObjectRebuild = @()
    }
  
    process {
        $ObjectRebuild += $ComputerObject
    }
  
    end {
        If (!$ObjectRebuild) {
            throw "Error. Input Object is required."
        } Else {
            #Get all of the Control sessions
            Write-Host -ForegroundColor Green "Getting all control sessions. This may take a few minutes"
            $ControlSessions = Get-ControlSessions

            $CWAUseMe = $CWACredentials.Authorization -Replace 'Bearer ',''
            Write-Host -ForegroundColor Green "Getting all Automate Control GUIDs. This may take a few minutes"
            #-----------GO FASTER ATTEMPT------------
            $CredsToUse
            $ObjectRebuild | Start-RSJob -Throttle 40 -Name {"Dunno2"} -ScriptBlock {
                Import-Module AutomateAPI -Force
                Connect-AutomateAPI -Server $Using:CWAServer -AuthorizationToken $Using:CWAUseMe -Quiet
                $GUID = Get-AutomateControlInfo -ComputerID $_.ID
                $Object = ""
                $Object = [pscustomobject] @{
                    ComputerID = $_.ID
                    ComputerName = $_.ComputerName
                    ClientName = $_.Client.Name
                    OperatingSystemName = $_.OperatingSystemName
                    SessionID = $GUID.SessionID
                }
                #Write-Output $GUID
                Return $Object
            } | out-null


            #-----------GO FASTER ATTEMPT------------
            

            $ArrayTest | Where-Object{($_.OnlineStatusControl -eq 'Online') -and ($_.OnlineStatusAutomate -eq 'Offline') }
        }
    }
}
